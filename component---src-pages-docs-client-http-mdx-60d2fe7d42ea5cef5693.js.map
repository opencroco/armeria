{"version":3,"sources":["webpack:///./src/layouts/docs.tsx","webpack:///./src/pages/docs/client-http.mdx"],"names":["DocsLayout","props","candidateMdxNodes","useStaticQuery","allMdx","nodes","index","docsIndex","prefix","pageTitleSuffix","pageTitle","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"6jCACA,6DA0CeA,IA/B+B,SAACC,GAAU,IAEpCC,EACfC,yBAAe,cADjBC,OAAUC,MAkBZ,OACE,kBAAC,IAAD,iBACMJ,EADN,CAEEC,kBAAmBA,EACnBI,MAAOC,EACPC,OAAO,OACPC,gBAAgB,6B,4NChCTC,EAAY,0BACZC,EAAe,GACtBC,EAAc,CAClBF,YACAC,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGf,EACF,8BACD,OAAO,YAACY,EAAD,iBAAeD,EAAiBX,EAAhC,CAAuCe,WAAYA,EAAYC,QAAQ,cAI5E,iBAAQ,CACN,GAAM,0BACN,MAAS,CACP,SAAY,aAEb,+BAAGC,WAAW,MAAS,CACtB,KAAQ,2BACR,aAAc,oCACd,UAAa,kBACZ,iCAAKA,WAAW,KAAQ,CACvB,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,kCAAMA,WAAW,OAAU,CAC1B,SAAY,UACZ,EAAK,qVAlBb,2BAoBA,iBAAQ,CACN,UAAa,gBACb,KAAQ,cAFV,qBAIA,sBACE,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,cADQ,cAItB,yCAAwB,+BAAGA,WAAW,KAAQ,CAC1C,KAAQ,mIADY,oBAAxB,6DAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,w6BAuBL,8CAA6B,+BAAGA,WAAW,KAAQ,CAC/C,KAAQ,mIADiB,oBAA7B,4EAGS,+BAAGA,WAAW,KAAQ,CAC3B,KAAQ,mIADH,oBAHT,4CAMA,sBACE,kBAAIA,WAAW,MAAf,2CACA,kBAAIA,WAAW,MAAf,2BACA,kBAAIA,WAAW,MAAf,iCAEF,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,24CA8BL,iBAAQ,CACN,GAAM,WACN,MAAS,CACP,SAAY,aAEb,+BAAGA,WAAW,MAAS,CACtB,KAAQ,YACR,aAAc,qBACd,UAAa,kBACZ,iCAAKA,WAAW,KAAQ,CACvB,cAAe,OACf,UAAa,QACb,OAAU,KACV,QAAW,MACX,QAAW,YACX,MAAS,OACR,kCAAMA,WAAW,OAAU,CAC1B,SAAY,UACZ,EAAK,qVAlBb,YAoBA,sBACE,kBAAIA,WAAW,MAAK,+BAAGA,WAAW,MAAS,CACvC,KAAQ,0BADQ,2BAQ1BH,EAAWI,gBAAiB","file":"component---src-pages-docs-client-http-mdx-60d2fe7d42ea5cef5693.js","sourcesContent":["import { RouteComponentProps } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport docsIndex from '../pages/docs/toc.json';\nimport MdxLayout from './mdx';\n\ninterface DocsLayoutProps extends RouteComponentProps {\n  pageContext: any;\n  pageTitle: string;\n}\n\nconst DocsLayout: React.FC<DocsLayoutProps> = (props) => {\n  const {\n    allMdx: { nodes: candidateMdxNodes },\n  } = useStaticQuery(graphql`\n    query {\n      allMdx(filter: { fileAbsolutePath: { glob: \"**/src/pages/docs/**\" } }) {\n        nodes {\n          tableOfContents(maxDepth: 1)\n          excerpt(pruneLength: 256, truncate: true)\n          parent {\n            ... on File {\n              sourceInstanceName\n              name\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <MdxLayout\n      {...props}\n      candidateMdxNodes={candidateMdxNodes}\n      index={docsIndex}\n      prefix=\"docs\"\n      pageTitleSuffix=\"Armeria documentation\"\n    />\n  );\n};\n\nexport default DocsLayout;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/minu/IdeaProjects/armeria/site/src/layouts/docs.tsx\";\nexport const pageTitle = \"Calling an HTTP service\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  pageTitle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"calling-an-http-service\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#calling-an-http-service\",\n        \"aria-label\": \"calling an http service permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Calling an HTTP service`}</h1>\n    <h6 {...{\n      \"className\": \"inlinePageToc\",\n      \"role\": \"navigation\"\n    }}>{`Table of contents`}</h6>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#see-also\"\n        }}>{`See also`}</a></li>\n    </ul>\n    <p>{`You can create a `}<a parentName=\"p\" {...{\n        \"href\": \"type://WebClient:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/WebClient.html\"\n      }}>{`type://WebClient`}</a>{` with a base URI and send a request with a relative path.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.client.WebClient;\nimport com.linecorp.armeria.common.AggregatedHttpResponse;\nimport com.linecorp.armeria.common.HttpHeaderNames;\nimport com.linecorp.armeria.common.HttpMethod;\nimport com.linecorp.armeria.common.RequestHeaders;\n\nWebClient webClient = WebClient.of(\"http://example.com/\");\n\n// Send a simple GET request.\nAggregatedHttpResponse res1 = webClient.get(\"/foo/bar.txt\").aggregate().join();\n\n// Send a GET request with an additional header.\nRequestHeaders getJson = RequestHeaders.of(HttpMethod.GET, \"/foo/bar.json\",\n                                           HttpHeaderNames.ACCEPT, \"application/json\");\n\nAggregatedHttpResponse res2 = webClient.execute(getJson).aggregate().join();\n\n// Send a simple POST request encoded in UTF-8.\nAggregatedHttpResponse res3 = webClient.post(\"/upload\", \"{ \\\\\"foo\\\\\": \\\\\"bar\\\\\" }\")\n                                       .aggregate().join();\n`}</code></pre>\n    <p>{`You can also create a `}<a parentName=\"p\" {...{\n        \"href\": \"type://WebClient:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/WebClient.html\"\n      }}>{`type://WebClient`}</a>{` without a base URI and send a request with an absolute URI.\nThe ad-hoc `}<a parentName=\"p\" {...{\n        \"href\": \"type://WebClient:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/client/WebClient.html\"\n      }}>{`type://WebClient`}</a>{` would be useful in the following cases:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Sending requests to arbitrary endpoints`}</li>\n      <li parentName=\"ul\">{`Building a proxy server`}</li>\n      <li parentName=\"ul\">{`Handling redirected requests`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.common.HttpStatus;\nimport com.linecorp.armeria.common.HttpHeaderNames;\n\n// Create a WebClient without a base URI.\nWebClient webClient = WebClient.of();\n\n// Send a request with an absolute URI.\nAggregatedHttpResponse res1 = webClient.get(\"http://example.com/foo/bar.txt\")\n                                       .aggregate()\n                                       .join();\n\n// Send a GET request with an authority header.\nHttpRequest request = HttpRequest.of(RequestHeaders.builder()\n                                                   .scheme(SessionProtocol.HTTP)\n                                                   .authority(\"example.com\")\n                                                   .method(HttpMethod.GET)\n                                                   .path(\"/foo/bar.txt\")\n                                                   .build());\nAggregatedHttpResponse res2 = webClient.execute(request).aggregate().join();\n\n// Handle a redirected request\nAggregatedHttpResponse redirected = webClient.get(\"http://example.com/redirect\")\n                                             .aggregate()\n                                             .join();\nassert redirected.status() == HttpStatus.TEMPORARY_REDIRECT;\nString location = redirected.headers().get(HttpHeaderNames.LOCATION);\nAggregatedHttpResponse actual = webClient.get(location).aggregate().join();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"see-also\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#see-also\",\n        \"aria-label\": \"see also permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`See also`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/docs/client-retrofit\"\n        }}>{`Retrofit integration`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}