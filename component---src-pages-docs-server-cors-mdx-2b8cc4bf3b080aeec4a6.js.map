{"version":3,"sources":["webpack:///./src/pages/docs/server-cors.mdx","webpack:///./src/layouts/docs.tsx"],"names":["name","pageTitle","_frontmatter","Tip","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","DocsLayout","candidateMdxNodes","useStaticQuery","allMdx","nodes","index","docsIndex","prefix","pageTitleSuffix"],"mappings":"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","file":"component---src-pages-docs-server-cors-mdx-2b8cc4bf3b080aeec4a6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/minu/IdeaProjects/armeria/site/src/layouts/docs.tsx\";\nexport const pageTitle = \"Configuring CORS\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Tip = makeShortcode(\"Tip\");\nconst layoutProps = {\n  pageTitle,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"configuring-cors\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#configuring-cors\",\n        \"aria-label\": \"configuring cors permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Configuring CORS`}</h1>\n    <h6 {...{\n      \"className\": \"inlinePageToc\",\n      \"role\": \"navigation\"\n    }}>{`Table of contents`}</h6>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#allowing-any-origin\"\n        }}>{`Allowing any origin`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#allowing-specific-origins\"\n        }}>{`Allowing specific origins`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#applying-different-policies-for-different-origins\"\n        }}>{`Applying different policies for different origins`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#applying-a-policy-to-the-specific-paths\"\n        }}>{`Applying a policy to the specific paths`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#configuring-cors-via-annotation\"\n        }}>{`Configuring CORS via annotation`}</a></li>\n    </ul>\n    <p>{`Armeria provides a way to configure Cross-origin resource sharing (CORS) policy for specific origins or\nany origin via `}<a parentName=\"p\" {...{\n        \"href\": \"type://CorsServiceBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/cors/CorsServiceBuilder.html\"\n      }}>{`type://CorsServiceBuilder`}</a>{`. For more information about CORS,\nvisit `}<a parentName=\"p\" {...{\n        \"href\": \"https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\"\n      }}>{`Wikipedia's CORS page`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"allowing-any-origin\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#allowing-any-origin\",\n        \"aria-label\": \"allowing any origin permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Allowing any origin`}</h2>\n    <p>{`To configure CORS Service allowing any origin (*), use `}<a parentName=\"p\" {...{\n        \"href\": \"type://CorsService#builderForAnyOrigin():https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/cors/CorsService.html#builderForAnyOrigin()\"\n      }}>{`type://CorsService#builderForAnyOrigin()`}</a>{`, e.g.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.common.HttpMethod;\nimport com.linecorp.armeria.server.HttpService;\nimport com.linecorp.armeria.server.ServerBuilder;\nimport com.linecorp.armeria.server.cors.CorsService;\n\nHttpService myService = (ctx, req) -> ...;\nFunction<? super HttpService, CorsService> corsService =\n        CorsService.builderForAnyOrigin()\n                   .allowCredentials()\n                   .allowRequestMethods(HttpMethod.POST, HttpMethod.GET)\n                   .allowRequestHeaders(\"allow_request_header\")\n                   .exposeHeaders(\"expose_header_1\", \"expose_header_2\")\n                   .preflightResponseHeader(\"x-preflight-cors\", \"Hello CORS\")\n                   .newDecorator();\n\nServerBuilder sb = Server.builder()\n                         .service(\"/message\", myService.decorate(corsService));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"allowing-specific-origins\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#allowing-specific-origins\",\n        \"aria-label\": \"allowing specific origins permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Allowing specific origins`}</h2>\n    <p>{`To configure CORS Service allowing specific origins, use `}<inlineCode parentName=\"p\">{`CorsService.builder()`}</inlineCode>{`, e.g.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`HttpService myService = (ctx, req) -> ...;\nFunction<? super HttpService, CorsService> corsService =\n        CorsService.builder(\"http://example.com\")\n                   .allowCredentials()\n                   .allowNullOrigin() // 'Origin: null' will be accepted.\n                   .allowRequestMethods(HttpMethod.POST, HttpMethod.GET)\n                   .allowRequestHeaders(\"allow_request_header\")\n                   .exposeHeaders(\"expose_header_1\", \"expose_header_2\")\n                   .preflightResponseHeader(\"x-preflight-cors\", \"Hello CORS\")\n                   .newDecorator();\n\nServerBuilder sb = Server.builder()\n                         .service(\"/message\", myService.decorate(corsService));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"applying-different-policies-for-different-origins\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#applying-different-policies-for-different-origins\",\n        \"aria-label\": \"applying different policies for different origins permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Applying different policies for different origins`}</h2>\n    <p>{`To configure different policies for different groups of origins, use `}<inlineCode parentName=\"p\">{`andForOrigins()`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`andForOrigin()`}</inlineCode>{`\nmethod which creates a new `}<a parentName=\"p\" {...{\n        \"href\": \"type://ChainedCorsPolicyBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/cors/ChainedCorsPolicyBuilder.html\"\n      }}>{`type://ChainedCorsPolicyBuilder`}</a>{` with the specific origins.\nCall `}<inlineCode parentName=\"p\">{`and()`}</inlineCode>{` to return to `}<a parentName=\"p\" {...{\n        \"href\": \"type://CorsServiceBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/cors/CorsServiceBuilder.html\"\n      }}>{`type://CorsServiceBuilder`}</a>{` once you are done with building a policy, e.g.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`HttpService myService = (ctx, req) -> ...;\nFunction<? super HttpService, CorsService> corsService =\n        CorsService.builder(\"http://example.com\")\n                   .allowCredentials()\n                   .allowNullOrigin() // 'Origin: null' will be accepted.\n                   .allowRequestMethods(HttpMethod.POST, HttpMethod.GET)\n                   .allowRequestHeaders(\"allow_request_header\")\n                   .exposeHeaders(\"expose_header_1\", \"expose_header_2\")\n                   .preflightResponseHeader(\"x-preflight-cors\", \"Hello CORS\")\n                   .maxAge(3600)\n                   .andForOrigins(\"http://example2.com\")\n                   .allowCredentials()\n                   .allowRequestMethods(HttpMethod.GET)\n                   .allowRequestHeaders(\"allow_request_header2\")\n                   .exposeHeaders(\"expose_header_3\", \"expose_header_4\")\n                   .and()\n                   .newDecorator();\n\nServerBuilder sb = Server.builder()\n                         .service(\"/message\", myService.decorate(corsService));\n`}</code></pre>\n    <p>{`You can also directly add a `}<a parentName=\"p\" {...{\n        \"href\": \"type://CorsPolicy:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/cors/CorsPolicy.html\"\n      }}>{`type://CorsPolicy`}</a>{` created by a `}<a parentName=\"p\" {...{\n        \"href\": \"type://CorsPolicyBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/cors/CorsPolicyBuilder.html\"\n      }}>{`type://CorsPolicyBuilder`}</a>{`, e.g.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.server.cors.CorsPolicyBuilder;\n\nHttpService myService = (ctx, req) -> ...;\nFunction<? super HttpService, CorsService> corsService =\n        CorsService.builder(\"http://example.com\")\n                   .allowCredentials()\n                   .allowNullOrigin() // 'Origin: null' will be accepted.\n                   .allowRequestMethods(HttpMethod.POST, HttpMethod.GET)\n                   .allowRequestHeaders(\"allow_request_header\")\n                   .exposeHeaders(\"expose_header_1\", \"expose_header_2\")\n                   .preflightResponseHeader(\"x-preflight-cors\", \"Hello CORS\")\n                   .maxAge(3600)\n                   .addPolicy(CorsPolicy.builder(\"http://example2.com\")\n                                        .allowCredentials()\n                                        .allowRequestMethods(HttpMethod.GET)\n                                        .allowRequestHeaders(\"allow_request_header2\")\n                                        .exposeHeaders(\"expose_header_3\", \"expose_header_4\")\n                                        .build())\n                   .newDecorator();\n\nServerBuilder sb = Server.builder()\n                         .service(\"/message\", myService.decorate(corsService));\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"applying-a-policy-to-the-specific-paths\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#applying-a-policy-to-the-specific-paths\",\n        \"aria-label\": \"applying a policy to the specific paths permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Applying a policy to the specific paths`}</h2>\n    <p>{`To configure a policy to the specific paths, you can use `}<inlineCode parentName=\"p\">{`route()`}</inlineCode>{` methods in the\n`}<a parentName=\"p\" {...{\n        \"href\": \"type://CorsServiceBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/cors/CorsServiceBuilder.html\"\n      }}>{`type://CorsServiceBuilder`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"type://ChainedCorsPolicyBuilder:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/cors/ChainedCorsPolicyBuilder.html\"\n      }}>{`type://ChainedCorsPolicyBuilder`}</a>{`. They can help you to adjust the scope that\na policy is applied to, e.g.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`HttpService myService = (ctx, req) -> ...;\nFunction<? super HttpService, CorsService> corsService =\n        CorsService.builder(\"http://example.com\")\n                   // CORS policy will be applied for the path that starts with '/message/web/api/'.\n                   .route(\"prefix:/message/web/api/\")\n                   .allowRequestMethods(HttpMethod.POST, HttpMethod.GET)\n                   .newDecorator();\nServerBuilder sb = Server.builder()\n                         .service(\"/message\", myService.decorate(corsService));\n`}</code></pre>\n    <Tip mdxType=\"Tip\">\n      <p>{`Please refer to the `}<a parentName=\"p\" {...{\n          \"href\": \"type://Route:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/Route.html\"\n        }}>{`type://Route`}</a>{` in order to learn how to specify a path pattern.`}</p>\n    </Tip>\n    <h2 {...{\n      \"id\": \"configuring-cors-via-annotation\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#configuring-cors-via-annotation\",\n        \"aria-label\": \"configuring cors via annotation permalink\",\n        \"className\": \"anchor before\"\n      }}><svg parentName=\"a\" {...{\n          \"aria-hidden\": \"true\",\n          \"focusable\": \"false\",\n          \"height\": \"16\",\n          \"version\": \"1.1\",\n          \"viewBox\": \"0 0 16 16\",\n          \"width\": \"16\"\n        }}><path parentName=\"svg\" {...{\n            \"fillRule\": \"evenodd\",\n            \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n          }}></path></svg></a>{`Configuring CORS via annotation`}</h2>\n    <p>{`You can also configure CORS for `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/server-annotated-service\"\n      }}>{`Annotated services`}</a>{` using the\n`}<a parentName=\"p\" {...{\n        \"href\": \"type://@CorsDecorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/decorator/CorsDecorator.html\"\n      }}>{`type://@CorsDecorator`}</a>{` annotation, e.g.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.linecorp.armeria.server.annotation.AdditionalHeader;\nimport com.linecorp.armeria.server.annotation.Get;\nimport com.linecorp.armeria.server.annotation.decorator.CorsDecorator;\n\nObject annotatedService = new Object() {\n    @Get(\"/get\")\n    @CorsDecorator(origins = \"http://example.com\", credentialsAllowed = true,\n                   nullOriginAllowed = true, exposedHeaders = \"expose_header\",\n                   allowedRequestMethods = HttpMethod.GET, allowedRequestHeaders = \"allow_header\",\n                   preflightResponseHeaders = {\n                       @AdditionalHeader(name = \"preflight_header\", value = \"preflight_value\")\n                   })\n    // In case you want to configure different CORS policies for different origins.\n    @CorsDecorator(origins = \"http://example2.com\", credentialsAllowed = true)\n    public HttpResponse get() {\n        return HttpResponse.of(HttpStatus.OK);\n    }\n\n    @Post(\"/post\")\n    // In case you want to allow any origin (*):\n    @CorsDecorator(origins = \"*\", exposedHeaders = \"expose_header\")\n    // You can not add a policy after adding the decorator allowing any origin (*).\n    public HttpResponse post() {\n        return HttpResponse.of(HttpStatus.OK)\n    }\n};\n\nServer s = Server.builder()\n                 .annotatedService(\"/example\", annotatedService)\n                 .build();\n`}</code></pre>\n    <p>{`You can also use `}<a parentName=\"p\" {...{\n        \"href\": \"type://@CorsDecorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/decorator/CorsDecorator.html\"\n      }}>{`type://@CorsDecorator`}</a>{` at the class level to apply the decorator to all service methods in the class.\nNote that the `}<a parentName=\"p\" {...{\n        \"href\": \"type://@CorsDecorator:https://javadoc.io/doc/com.linecorp.armeria/armeria-javadoc/latest/com/linecorp/armeria/server/annotation/decorator/CorsDecorator.html\"\n      }}>{`type://@CorsDecorator`}</a>{` annotation specified at the method level takes precedence over what's specified\nat the class level:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// This decorator will be ignored for the path \"/post\".\n@CorsDecorator(origins = \"http://example.com\", credentialsAllowed = true)\nclass MyAnnotatedService {\n    @Get(\"/get\")\n    public HttpResponse get() {\n        return HttpResponse.of(HttpStatus.OK);\n    }\n\n    @Post(\"/post\")\n    @CorsDecorator(origins = \"http://example2.com\", credentialsAllowed = true)\n    public HttpResponse post() {\n        return HttpResponse.of(HttpStatus.OK);\n    }\n}\n`}</code></pre>\n    <p>{`If you want to allow a CORS policy to the specific paths, you can use `}<inlineCode parentName=\"p\">{`pathPatterns`}</inlineCode>{` property:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`// This policy will be applied only to the paths matched by the pattern.\n@CorsDecorator(origins = \"http://example.com\", pathPatterns = \"glob:/**/web/api\", credentialsAllowed = true)\nclass MyAnnotatedService {\n    ...\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import { RouteComponentProps } from '@reach/router';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport docsIndex from '../pages/docs/toc.json';\nimport MdxLayout from './mdx';\n\ninterface DocsLayoutProps extends RouteComponentProps {\n  pageContext: any;\n  pageTitle: string;\n}\n\nconst DocsLayout: React.FC<DocsLayoutProps> = (props) => {\n  const {\n    allMdx: { nodes: candidateMdxNodes },\n  } = useStaticQuery(graphql`\n    query {\n      allMdx(filter: { fileAbsolutePath: { glob: \"**/src/pages/docs/**\" } }) {\n        nodes {\n          tableOfContents(maxDepth: 1)\n          excerpt(pruneLength: 256, truncate: true)\n          parent {\n            ... on File {\n              sourceInstanceName\n              name\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <MdxLayout\n      {...props}\n      candidateMdxNodes={candidateMdxNodes}\n      index={docsIndex}\n      prefix=\"docs\"\n      pageTitleSuffix=\"Armeria documentation\"\n    />\n  );\n};\n\nexport default DocsLayout;\n"],"sourceRoot":""}